/* ========================================================= //<>// //<>//
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:969053:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  String selectedComPort=dropList1.getSelectedText();
  println("Opening COM Port "+selectedComPort);
  irPort = new Serial(this, selectedComPort, 9600);
  irPort.bufferUntil(lf);
  irPortOpen=true;
  irPort.write("AT\n");
} //_CODE_:button1:969053:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:dropList1:588508:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:dropList1:588508:

public void textarea1_change1(GTextArea source, GEvent event) { //_CODE_:textarea1:532671:
  println("textarea1 - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:textarea1:532671:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:remoteType:916203:
  println("remoteType - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:remoteType:916203:

public void textfield2_change1(GTextField source, GEvent event) { //_CODE_:buttonPressed:483187:
  println("buttonPressed - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:buttonPressed:483187:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:555889:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  //irPort.write("AT+LIST\n");
         println("-----========== WRITING REMOTE =========---------");
         sendProgrammingCommand();
  println(togGroupX);//.getSelection();

} //_CODE_:button2:555889:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:880756:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
  irPort.write("AT+LIST\n");

  
} //_CODE_:button3:880756:

public void textfield1_change2(GTextField source, GEvent event) { //_CODE_:keyRepeat:429070:
  println("keyRepeat - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:keyRepeat:429070:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  button1 = new GButton(this, 180, 20, 140, 40);
  button1.setText("Open Com Port");
  button1.addEventHandler(this, "button1_click1");
  dropList1 = new GDropList(this, 20, 20, 140, 360, 8);
  dropList1.setItems(loadStrings("list_588508"), 0);
  dropList1.addEventHandler(this, "dropList1_click1");
  textarea1 = new GTextArea(this, 20, 620, 920, 60, G4P.SCROLLBARS_VERTICAL_ONLY | G4P.SCROLLBARS_AUTOHIDE);
  textarea1.setOpaque(true);
  textarea1.addEventHandler(this, "textarea1_change1");
  label1 = new GLabel(this, 860, 20, 80, 20);
  label1.setText("My label");
  label1.setOpaque(false);
  remoteType = new GTextField(this, 20, 100, 160, 20, G4P.SCROLLBARS_NONE);
  remoteType.setOpaque(true);
  remoteType.addEventHandler(this, "textfield1_change1");
  label2 = new GLabel(this, 20, 80, 80, 20);
  label2.setText("Remote Type");
  label2.setOpaque(false);
  label4 = new GLabel(this, 200, 80, 120, 20);
  label4.setText("Button Pressed");
  label4.setOpaque(false);
  buttonPressed = new GTextField(this, 200, 100, 160, 20, G4P.SCROLLBARS_NONE);
  buttonPressed.setOpaque(true);
  buttonPressed.addEventHandler(this, "textfield2_change1");
  button2 = new GButton(this, 20, 220, 140, 40);
  button2.setText("Program Remote");
  button2.addEventHandler(this, "button2_click1");
  togGroup1 = new GToggleGroup();
  button3 = new GButton(this, 340, 20, 140, 40);
  button3.setText("Read Remote");
  button3.addEventHandler(this, "button3_click1");
  keyRepeat = new GTextField(this, 380, 100, 160, 20, G4P.SCROLLBARS_NONE);
  keyRepeat.setText("0A");
  keyRepeat.setOpaque(true);
  keyRepeat.addEventHandler(this, "textfield1_change2");
  label3 = new GLabel(this, 380, 80, 80, 20);
  label3.setText("Key Repeat");
  label3.setOpaque(false);
  label5 = new GLabel(this, 280, 140, 140, 20);
  label5.setText("Key Sequence");
  label5.setTextBold();
  label5.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton button1; 
GDropList dropList1; 
GTextArea textarea1; 
GLabel label1; 
GTextField remoteType; 
GLabel label2; 
GLabel label4; 
GTextField buttonPressed; 
GButton button2; 
GToggleGroup togGroup1; 
GButton button3; 
GTextField keyRepeat; 
GLabel label3; 
GLabel label5; 